// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package vkcloudlogs

import (
	context "context"
	"github.com/vk-cs/cloudlogs-fluent-bit/gen"
	grpc "google.golang.org/grpc"
	sync "sync"
)

// LogServiceClientMock is a mock implementation of gen.LogServiceClient.
//
// 	func TestSomethingThatUsesLogServiceClient(t *testing.T) {
//
// 		// make and configure a mocked gen.LogServiceClient
// 		mockedLogServiceClient := &LogServiceClientMock{
// 			WriteFunc: func(ctx context.Context, in *gen.WriteRequest, opts ...grpc.CallOption) (*gen.WriteResponse, error) {
// 				panic("mock out the Write method")
// 			},
// 		}
//
// 		// use mockedLogServiceClient in code that requires gen.LogServiceClient
// 		// and then make assertions.
//
// 	}
type LogServiceClientMock struct {
	// WriteFunc mocks the Write method.
	WriteFunc func(ctx context.Context, in *gen.WriteRequest, opts ...grpc.CallOption) (*gen.WriteResponse, error)

	// calls tracks calls to the methods.
	calls struct {
		// Write holds details about calls to the Write method.
		Write []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// In is the in argument value.
			In *gen.WriteRequest
			// Opts is the opts argument value.
			Opts []grpc.CallOption
		}
	}
	lockWrite sync.RWMutex
}

// Write calls WriteFunc.
func (mock *LogServiceClientMock) Write(ctx context.Context, in *gen.WriteRequest, opts ...grpc.CallOption) (*gen.WriteResponse, error) {
	callInfo := struct {
		Ctx  context.Context
		In   *gen.WriteRequest
		Opts []grpc.CallOption
	}{
		Ctx:  ctx,
		In:   in,
		Opts: opts,
	}
	mock.lockWrite.Lock()
	mock.calls.Write = append(mock.calls.Write, callInfo)
	mock.lockWrite.Unlock()
	if mock.WriteFunc == nil {
		var (
			writeResponseOut *gen.WriteResponse
			errOut           error
		)
		return writeResponseOut, errOut
	}
	return mock.WriteFunc(ctx, in, opts...)
}

// WriteCalls gets all the calls that were made to Write.
// Check the length with:
//     len(mockedLogServiceClient.WriteCalls())
func (mock *LogServiceClientMock) WriteCalls() []struct {
	Ctx  context.Context
	In   *gen.WriteRequest
	Opts []grpc.CallOption
} {
	var calls []struct {
		Ctx  context.Context
		In   *gen.WriteRequest
		Opts []grpc.CallOption
	}
	mock.lockWrite.RLock()
	calls = mock.calls.Write
	mock.lockWrite.RUnlock()
	return calls
}
